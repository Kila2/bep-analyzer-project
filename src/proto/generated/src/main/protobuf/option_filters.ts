// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v5.29.3
// source: src/main/protobuf/option_filters.proto

/* eslint-disable */

export const protobufPackage = "options";

/**
 * Copyright 2017 The Bazel Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Docs in java enum. */
export enum OptionEffectTag {
  /** UNKNOWN - This option's effect or intent is unknown. */
  UNKNOWN = 0,
  /** NO_OP - This flag has literally no effect. */
  NO_OP = 1,
  LOSES_INCREMENTAL_STATE = 2,
  CHANGES_INPUTS = 3,
  AFFECTS_OUTPUTS = 4,
  BUILD_FILE_SEMANTICS = 5,
  BAZEL_INTERNAL_CONFIGURATION = 6,
  LOADING_AND_ANALYSIS = 7,
  EXECUTION = 8,
  HOST_MACHINE_RESOURCE_OPTIMIZATIONS = 9,
  EAGERNESS_TO_EXIT = 10,
  BAZEL_MONITORING = 11,
  TERMINAL_OUTPUT = 12,
  ACTION_COMMAND_LINES = 13,
  TEST_RUNNER = 14,
  UNRECOGNIZED = -1,
}

export function optionEffectTagFromJSON(object: any): OptionEffectTag {
  switch (object) {
    case 0:
    case "UNKNOWN":
      return OptionEffectTag.UNKNOWN;
    case 1:
    case "NO_OP":
      return OptionEffectTag.NO_OP;
    case 2:
    case "LOSES_INCREMENTAL_STATE":
      return OptionEffectTag.LOSES_INCREMENTAL_STATE;
    case 3:
    case "CHANGES_INPUTS":
      return OptionEffectTag.CHANGES_INPUTS;
    case 4:
    case "AFFECTS_OUTPUTS":
      return OptionEffectTag.AFFECTS_OUTPUTS;
    case 5:
    case "BUILD_FILE_SEMANTICS":
      return OptionEffectTag.BUILD_FILE_SEMANTICS;
    case 6:
    case "BAZEL_INTERNAL_CONFIGURATION":
      return OptionEffectTag.BAZEL_INTERNAL_CONFIGURATION;
    case 7:
    case "LOADING_AND_ANALYSIS":
      return OptionEffectTag.LOADING_AND_ANALYSIS;
    case 8:
    case "EXECUTION":
      return OptionEffectTag.EXECUTION;
    case 9:
    case "HOST_MACHINE_RESOURCE_OPTIMIZATIONS":
      return OptionEffectTag.HOST_MACHINE_RESOURCE_OPTIMIZATIONS;
    case 10:
    case "EAGERNESS_TO_EXIT":
      return OptionEffectTag.EAGERNESS_TO_EXIT;
    case 11:
    case "BAZEL_MONITORING":
      return OptionEffectTag.BAZEL_MONITORING;
    case 12:
    case "TERMINAL_OUTPUT":
      return OptionEffectTag.TERMINAL_OUTPUT;
    case 13:
    case "ACTION_COMMAND_LINES":
      return OptionEffectTag.ACTION_COMMAND_LINES;
    case 14:
    case "TEST_RUNNER":
      return OptionEffectTag.TEST_RUNNER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OptionEffectTag.UNRECOGNIZED;
  }
}

export function optionEffectTagToJSON(object: OptionEffectTag): string {
  switch (object) {
    case OptionEffectTag.UNKNOWN:
      return "UNKNOWN";
    case OptionEffectTag.NO_OP:
      return "NO_OP";
    case OptionEffectTag.LOSES_INCREMENTAL_STATE:
      return "LOSES_INCREMENTAL_STATE";
    case OptionEffectTag.CHANGES_INPUTS:
      return "CHANGES_INPUTS";
    case OptionEffectTag.AFFECTS_OUTPUTS:
      return "AFFECTS_OUTPUTS";
    case OptionEffectTag.BUILD_FILE_SEMANTICS:
      return "BUILD_FILE_SEMANTICS";
    case OptionEffectTag.BAZEL_INTERNAL_CONFIGURATION:
      return "BAZEL_INTERNAL_CONFIGURATION";
    case OptionEffectTag.LOADING_AND_ANALYSIS:
      return "LOADING_AND_ANALYSIS";
    case OptionEffectTag.EXECUTION:
      return "EXECUTION";
    case OptionEffectTag.HOST_MACHINE_RESOURCE_OPTIMIZATIONS:
      return "HOST_MACHINE_RESOURCE_OPTIMIZATIONS";
    case OptionEffectTag.EAGERNESS_TO_EXIT:
      return "EAGERNESS_TO_EXIT";
    case OptionEffectTag.BAZEL_MONITORING:
      return "BAZEL_MONITORING";
    case OptionEffectTag.TERMINAL_OUTPUT:
      return "TERMINAL_OUTPUT";
    case OptionEffectTag.ACTION_COMMAND_LINES:
      return "ACTION_COMMAND_LINES";
    case OptionEffectTag.TEST_RUNNER:
      return "TEST_RUNNER";
    case OptionEffectTag.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

/** Docs in java enum. */
export enum OptionMetadataTag {
  EXPERIMENTAL = 0,
  INCOMPATIBLE_CHANGE = 1,
  DEPRECATED = 2,
  HIDDEN = 3,
  INTERNAL = 4,
  IMMUTABLE = 7,
  UNRECOGNIZED = -1,
}

export function optionMetadataTagFromJSON(object: any): OptionMetadataTag {
  switch (object) {
    case 0:
    case "EXPERIMENTAL":
      return OptionMetadataTag.EXPERIMENTAL;
    case 1:
    case "INCOMPATIBLE_CHANGE":
      return OptionMetadataTag.INCOMPATIBLE_CHANGE;
    case 2:
    case "DEPRECATED":
      return OptionMetadataTag.DEPRECATED;
    case 3:
    case "HIDDEN":
      return OptionMetadataTag.HIDDEN;
    case 4:
    case "INTERNAL":
      return OptionMetadataTag.INTERNAL;
    case 7:
    case "IMMUTABLE":
      return OptionMetadataTag.IMMUTABLE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return OptionMetadataTag.UNRECOGNIZED;
  }
}

export function optionMetadataTagToJSON(object: OptionMetadataTag): string {
  switch (object) {
    case OptionMetadataTag.EXPERIMENTAL:
      return "EXPERIMENTAL";
    case OptionMetadataTag.INCOMPATIBLE_CHANGE:
      return "INCOMPATIBLE_CHANGE";
    case OptionMetadataTag.DEPRECATED:
      return "DEPRECATED";
    case OptionMetadataTag.HIDDEN:
      return "HIDDEN";
    case OptionMetadataTag.INTERNAL:
      return "INTERNAL";
    case OptionMetadataTag.IMMUTABLE:
      return "IMMUTABLE";
    case OptionMetadataTag.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
